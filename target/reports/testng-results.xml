<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-26T20:18:37 IST" name="Cucumber with TestNG" finished-at="2021-07-26T20:20:18 IST" duration-ms="100461">
    <groups>
      <group name="cucumber">
        <method signature="TestngRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" name="runScenario" class="Runner.TestngRunner"/>
        <method signature="ContactRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.ContactRunner@6aa8e115]" name="runScenario" class="Runner.ContactRunner"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-07-26T20:18:37 IST" name="Runner Cucumber Test" finished-at="2021-07-26T20:19:40 IST" duration-ms="62129">
      <class name="Runner.ContactRunner">
        <test-method is-config="true" signature="setUpExtent()[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:18:37 IST" name="setUpExtent" finished-at="2021-07-26T20:18:38 IST" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpExtent -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:18:38 IST" name="setUpClass" finished-at="2021-07-26T20:18:38 IST" duration-ms="498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:18:38 IST" name="initialize" finished-at="2021-07-26T20:18:42 IST" duration-ms="3379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:18:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-26T20:19:30 IST" duration-ms="48314" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Create a new contact"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test on Contact Feature]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: input[name='first_name']' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.cssSelector: input[name='first_name']' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at Pages.ContactPage.user_provides_firstname_and_lastname_and_email_and_position(ContactPage.java:61)
at StepDefinitions.ContactStep.user_provides_firstname_and_lastname_and_email_and_position(ContactStep.java:16)
at âœ½.user provides firstname and lastname and email and position(file:///Users/503000218/Code/Synchrony/ParallelCucumber/./src/main/java/Features/Contact.feature:13)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"input[name='first_name']"}
  (Session info: chrome=91.0.4472.106)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'insyfhydmx00218', ip: 'fe80:0:0:0:8db:4be7:9266:9f87%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: /var/folders/wp/zf7krg3j2rl...}, goog:chromeOptions: {debuggerAddress: localhost:60562}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ae975340b8d02cbaf3452d16f5f15acc
*** Element info: {Using=css selector, value=input[name='first_name']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy25.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at Pages.ContactPage.user_provides_firstname_and_lastname_and_email_and_position(ContactPage.java:61)
at StepDefinitions.ContactStep.user_provides_firstname_and_lastname_and_email_and_position(ContactStep.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)
at io.cucumber.core.runner.TestStep.run(TestStep.java:64)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:104)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:73)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:117)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:114)
at Runner.ContactRunner.runScenario(ContactRunner.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:19:30 IST" name="getResult" finished-at="2021-07-26T20:19:30 IST" duration-ms="548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=FAILURE method=ContactRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.ContactRunner@6aa8e115] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:19:30 IST" name="tearDownClass" finished-at="2021-07-26T20:19:40 IST" duration-ms="9094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="flushExtent()[pri:0, instance:Runner.ContactRunner@6aa8e115]" started-at="2021-07-26T20:19:40 IST" name="flushExtent" finished-at="2021-07-26T20:19:40 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushExtent -->
      </class> <!-- Runner.ContactRunner -->
    </test> <!-- Runner Cucumber Test -->
    <test started-at="2021-07-26T20:18:37 IST" name="Runner TestNG Test" finished-at="2021-07-26T20:20:18 IST" duration-ms="100461">
      <class name="Runner.TestngRunner">
        <test-method is-config="true" signature="setUpExtent()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:18:37 IST" name="setUpExtent" finished-at="2021-07-26T20:18:38 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpExtent -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:18:38 IST" name="setUpClass" finished-at="2021-07-26T20:18:38 IST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:18:38 IST" name="initialize" finished-at="2021-07-26T20:18:42 IST" duration-ms="3382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:18:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-26T20:19:11 IST" duration-ms="29717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check the Home button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test on Dashboard page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:11 IST" name="getResult" finished-at="2021-07-26T20:19:11 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=TestngRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:11 IST" name="initialize" finished-at="2021-07-26T20:19:13 IST" duration-ms="1352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-26T20:19:32 IST" duration-ms="19039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check the Contact Link"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test on Dashboard page]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:32 IST" name="getResult" finished-at="2021-07-26T20:19:32 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=TestngRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:32 IST" name="initialize" finished-at="2021-07-26T20:19:34 IST" duration-ms="2309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:34 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-26T20:19:59 IST" duration-ms="24476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Free CRM Login with valid credential"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Free CRM login feature]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:59 IST" name="getResult" finished-at="2021-07-26T20:19:59 IST" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=TestngRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:19:59 IST" name="initialize" finished-at="2021-07-26T20:20:01 IST" duration-ms="1767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:20:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-26T20:20:15 IST" duration-ms="13898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Free CRM Login page elements"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Free CRM login feature]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:20:15 IST" name="getResult" finished-at="2021-07-26T20:20:15 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=TestngRunner.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestngRunner@51bd8b5c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:20:15 IST" name="tearDownClass" finished-at="2021-07-26T20:20:18 IST" duration-ms="3152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="flushExtent()[pri:0, instance:Runner.TestngRunner@51bd8b5c]" started-at="2021-07-26T20:20:18 IST" name="flushExtent" finished-at="2021-07-26T20:20:18 IST" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushExtent -->
      </class> <!-- Runner.TestngRunner -->
    </test> <!-- Runner TestNG Test -->
  </suite> <!-- Cucumber with TestNG -->
</testng-results>
